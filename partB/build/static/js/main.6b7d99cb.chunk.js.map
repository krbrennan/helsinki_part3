{"version":3,"sources":["services/numbers.js","components/Person.js","components/Persons.js","components/Filter.js","components/Form.js","components/ErrorMessage.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","res","response","data","newObject","post","obj","delete","id","newObj","put","Person","props","info","name","number","onClick","Persons","filtered","length","people","map","person","idx","deletePerson","Filter","onSubmit","submitSearch","onChange","onTextChange","Form","submitName","handleNameChange","value","handleNumberChange","type","ErrorMessage","console","log","message","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchName","setSearchName","filteredNames","setFilteredNames","errorMessage","setErrorMessage","newErrorMessage","useEffect","apiService","event","preventDefault","filter","toLowerCase","includes","target","newPerson","alreadyExists","forEach","nameTaken","oldArray","setTimeout","personObject","personObj","putNewNumber","personToDelete","catch","error","status","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b7d99cb.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/'\r\n\r\nconst getAll = () => {\r\n    axios\r\n        .get(baseUrl)    \r\n        .then((res)=>{\r\n            return res\r\n        })\r\n        const request = axios.get(baseUrl)\r\n        return request.then((response) => {\r\n            return response.data\r\n        })\r\n}\r\n\r\n\r\nconst create = (newObject) => {\r\n    return axios.post('http://localhost:3001/api/persons', newObject)\r\n}\r\n\r\nconst personToDelete = (obj) => {\r\n    // return axios.delete(`${baseUrl}/${obj.id}`).then((res) => obj).catch(e => console.log('Cannot delete, user does not exist!'))\r\n    return axios\r\n        // .delete(`${baseUrl}/${obj.id}`)\r\n        .delete(`http://localhost:3001/api/persons/${obj.id}`)\r\n        // .then((res) => res.data)\r\n}\r\n\r\n\r\nconst updateNumber = (id, newObj) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObj)\r\n    return request.then(res => res.data) \r\n    // return axios.put(`${baseUrl}/${id}`, newObj)\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    personToDelete,\r\n    updateNumber\r\n}","import React from 'react'\r\n\r\nconst Person = (props) => {\r\n    // console.log(props)\r\n    return(\r\n        <div>\r\n            <p key={props.info.name}>{props.info.name}    {props.info.number} </p>\r\n            <button onClick={() => props.delete(props.info.name)}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nimport Person from './Person'\r\n\r\nconst Persons = (props) => { \r\n  // console.log(props)   \r\n    if(props.filtered.length === 0) {\r\n      return(\r\n        <div>\r\n          <ul>\r\n            {props.people.map((person, idx) => {\r\n            return <Person delete={props.deletePerson} info={person} />\r\n          })}\r\n          </ul>\r\n        </div>\r\n      )\r\n    } else {\r\n        return(\r\n          <div>\r\n             <ul>\r\n            {props.filtered.map((person, idx) => {\r\n                return <li><Person delete={props.deletePerson} info={person} /></li>\r\n              })}\r\n          </ul>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return(\r\n        <form onSubmit={props.submitSearch}>\r\n          Lookup a name:  <input onChange={props.onTextChange} />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <form onSubmit={props.submitName}>\r\n        <h2>Add a new Contact</h2>\r\n        <div>\r\n          name: <input onChange={props.handleNameChange} value={props.name}/>\r\n        </div>\r\n        <div>number: <input onChange={props.handleNumberChange} value={props.number} /></div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\n\r\nexport default Form","import React from 'react'\r\nimport  '../index.css'\r\n\r\nconst ErrorMessage = (props) => {\r\n    console.log(props)\r\n    if(props.message == '') {\r\n        return(\r\n            <div className='errorDiv' />\r\n        )\r\n    } else {\r\n        return(\r\n            <div className='errorDiv'>\r\n                <h4 className='errorMessage'>{props.message}</h4>\r\n            </div>\r\n        )   \r\n    }\r\n}\r\n\r\n\r\nexport default ErrorMessage\r\n","import React, { useState, useEffect } from 'react'\n\n// Import API service functions\nimport apiService from './services/numbers'\n\n// component imports\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport ErrorMessage from './components/ErrorMessage'\n\n\nconst App = () => {\n  // const [ persons, setPersons ] = useState([\n  //   { name: 'Arto Hellas', number: '040-123456' },\n  //   { name: 'Ada Lovelace', number: '39-44-5323523' },\n  //   { name: 'Dan Abramov', number: '12-43-234345' },\n  //   { name: 'Mary Poppendieck', number: '39-23-6423122' }\n  // ]) \n\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n\n\n  const [ searchName, setSearchName ] = useState('')\n  const [ filteredNames, setFilteredNames] = useState([])\n\n  const [ errorMessage, setErrorMessage ] = useState('')\n\n\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n\n  const nameTaken = (name) => {\n    // search persons, if this name is already in persons return true, else return false\n    let alreadyExists = false\n\n    persons.forEach((person) => {\n      if(person.name.includes(name)){\n        alreadyExists = true\n      }\n    })\n    return alreadyExists\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  \n  \n\n\n  // search Names\n  const handleFilterChange = (event) => {\n      // needs access to persons\n      setSearchName(event.target.value)\n  }\n\n  const submitSearch = (event) => {\n    event.preventDefault()\n    setSearchName(searchName)\n\n    const filtered = persons.filter((person) => {\n      return person.name.toLowerCase().includes(searchName)\n    })\n\n    setFilteredNames(filtered)\n  }\n\n\n\n  const putNewNumber = (person, newObj) => {\n  // need to send person ID and the new Object\n    const personObject = persons.filter((personObj) => {\n      if(personObj.name == person){\n        return personObj\n      }\n    })\n    // console.log(personObject)\n    // console.log(personObject[0])\n    apiService.updateNumber(personObject[0].id, newObj).then((res) => {\n      // console.log(res)\n      setPersons(persons.map((person) => {\n        // console.log(person)\n        return person.id !== res.id ? person : res\n      }))\n    })\n    // then need to update person object in local state\n    apiService.getAll()\n      .then(res => setPersons(res))\n    \n  }\n\n\n  const newErrorMessage = (type, name) => {\n    console.log(type)\n    // setMessage if new person added to say \"Added ${name}\"\n    // setMessage if existing person's number was changed to \"Changed ${name}'s phone number\"\n    type == 'new' ? setErrorMessage(`Added ${name}`) : setErrorMessage(`${name}'s number changed!`)\n  }\n\n\n\n  const submitName = (event) => {\n    event.preventDefault()\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if(nameTaken(newName, persons)) {\n      // PUT new info onto server \n      putNewNumber(newName, newPerson)\n\n      newErrorMessage('update', newPerson.name)\n      setTimeout(() => {\n        setErrorMessage('')\n      }, 5000)\n      apiService.getAll()\n        .then(res => setPersons(res))\n\n      // return alert(`${newName} is already taken!`)\n    } else {  \n      apiService.create(newPerson).then((res) => {\n        // console.log(res.data)\n        setPersons(oldArray => [...oldArray, res.data])\n      })\n\n\n      newErrorMessage('new', newPerson.name)\n      setTimeout(() => {\n        setErrorMessage('')\n      }, 5000)\n\n\n      // setPersons(oldArray => [...oldArray, newPerson])\n      // POST to server, update setPersons with response\n      setNewNumber('')\n      setNewName('')\n\n      apiService.getAll()\n      .then(res => setPersons(res))\n    }\n  }\n\n\n\n  const deletePerson = (props) => {\n    // console.log(`PROPSSSSSS:      ${props}`)\n    // find person first, capture their object, then send apiService(object)\n    const personToDelete = persons.filter((person) => {\n      return person.name == props\n    })\n\n    console.log(personToDelete[0])\n    // update persons by removing this deleted person\n    apiService.personToDelete(personToDelete[0]).then((res) => {\n      console.log(res)\n      // manually delete entry in current state\n      // res.data is an array of people\n      setPersons(res.data)\n\n      // const newPersons = persons.filter((person) => {\n      //   if(person.name !== res.name){\n      //     return person\n      //   }\n      // })\n      // setPersons(newPersons)\n    })\n    .catch((error) => {\n      // console.log(error.response.status)\n      if(error.response.status == 404) {\n        setErrorMessage(`Information for ${props} has already been removed from the server`)\n        setTimeout(() => {\n          setErrorMessage('')\n        }, 5000)\n        apiService.getAll()\n        .then(res => setPersons(res))\n      }\n    })\n  }\n\n\n  // \n  // \n  // \n  // \n  useEffect(() => {\n    // apiService.getAll().then(res => setPersons(res))\n    apiService.getAll()\n      .then(res => setPersons(res))\n  }, [])\n\n\n\n  return (\n    <div>\n      <div className='top-div'>\n        <h1 className='title'>Phonebook</h1>\n        <ErrorMessage message={errorMessage} />\n      </div>\n        <Filter submitSearch={submitSearch} onTextChange={handleFilterChange} />\n        <Form \n          submitName={submitName} \n          handleNameChange={handleNameChange} \n          handleNumberChange={handleNumberChange}  \n          number={newNumber} \n          name={newName}\n          />\n      <h2>Numbers:</h2>\n        <Persons people={persons} deletePerson={deletePerson} filtered={filteredNames} />\n      ...\n    </div>\n  )\n}\n\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}